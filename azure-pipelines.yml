# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

resources:
  - repo: self

pool:
  vmImage: ubuntu-latest

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8199a986-94fb-44c8-8130-c9162de7c60d'
  imageRepository: 'springhelloworld'
  containerRegistry: 'ndacrsnd.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(appVersion)'
  vmImageName: ubuntu-latest

stages:
  - stage: BuildSpringBoot
    displayName: Build Spring Boot
    jobs:
      - job: Build
        displayName: Build
        pool:
            vmImage: ubuntu-latest
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '17'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: 'package'
          - script: ls
            displayName: 'Check Docker Version'


  - stage: BuildDockerImage
    displayName: Build Docker Image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)